/**
 * 
 */
package com.mahmud.NS09StringBuilderAppPackage;

/**
 * @author Mahmudul Hasan Khan CSE
 *
 */
public class MainProgram {

	/**
		 * @author Mahmudul Hasan Khan CSE
		 *
		 */
	private enum Color {
		BLACK, RED, BLUE, SILVER, GOLDEN_RED
	}

	/**
		 * @author Mahmudul Hasan Khan CSE
		 *
		 */
	private class Car {
		

		private String name;
		private Double speed;
		private Double price;
		private Color color;

		/**
		 * @param name
		 * @param speed
		 * @param price
		 * @param color
		 */
		public Car(String name, Double speed, Double price, Color color) {
			this();
			this.name = name;
			this.speed = speed;
			this.price = price;
			this.color = color;
		}

		/**
		 * 
		 */
		public Car() {
			// TODO Auto-generated constructor stub
		}

		/* (non-Javadoc)
		 * @see java.lang.Object#toString()
		 */
		@Override
		public String toString() {
			StringBuilder builder = new StringBuilder();
			builder.append("Car [name=").append(name).append(", speed=").append(speed).append("kph, price=").append(price)
					.append("$, color=").append(color).append("]");
			return builder.toString();
		}

	}
	
	private static Car car;

	/**
	 * 
	 */
	public MainProgram(String name, Double speed, Double price, Color color) {
		// TODO Auto-generated constructor stub
		car = new Car(name, speed, price, color);
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		System.out.println("\n");
		displayPelindrome("dot saw I was tod");
		displayPelindrome("Mahmudul Hasan Khan");
		
		int initCapacity = 500;
		StringBuilder stringBuilder = new StringBuilder(initCapacity);
		stringBuilder.append(3);
		stringBuilder.append('+');
		stringBuilder.append(Math.PI);
		stringBuilder.append(" == ");
		double result = 3 + Math.PI;
		stringBuilder.append(result);
		stringBuilder.append(" => ");
		stringBuilder.append(3 + Math.PI == result);
		stringBuilder.append(";\n\t");
		stringBuilder.append(-10f);
		stringBuilder.append('*');
		stringBuilder.append(2.5f);
		stringBuilder.append(" == ");
		stringBuilder.append(25f);
		stringBuilder.append(" => ");
		stringBuilder.append(-10f * 2.5f == 25f);
		stringBuilder.append(";\n\tcharacterArray = ");
		char[] characterArray = {'M', 'a', 'h', 'm', 'u', 'd'};
		stringBuilder.append(characterArray);
		stringBuilder.append(";\n\t");
		new MainProgram("Lamborghini", 500.0, 100000.0, Color.GOLDEN_RED);
		stringBuilder.append(car);
		double sum = 2.5 + 2;
		stringBuilder.insert(0, ";\n\t");
		stringBuilder.insert(0, 2.5 + 2 == sum);
		stringBuilder.insert(0, " => ");
		stringBuilder.insert(0, 2.5 + 2);
		stringBuilder.insert(0, " == ");
		stringBuilder.insert(0, 2.5);
		stringBuilder.insert(0, '+');
		stringBuilder.insert(0, 2);
		stringBuilder.insert(0, "stringBuilder = {\n\t");
		stringBuilder.append(";\n\tA");
		stringBuilder.setCharAt(stringBuilder.length()-1, '}');
		stringBuilder.append(";\tcapacity = ");
		stringBuilder.append(stringBuilder.capacity());
		stringBuilder.append(";\tlength() = ");
		long length = stringBuilder.length();
		stringBuilder.append(length);
		
		System.out.println("\n\t" + stringBuilder);
		
		stringBuilder.delete(stringBuilder.indexOf("{") + 1, 
				stringBuilder.indexOf("}"));
		
		String lengthStr = 
		
		System.out.println("\n\tDeleting stringBuilder : \n\t"
				+ stringBuilder);

	}

	private static void displayPelindrome(String string) {
		// TODO Auto-generated method stub
		
		System.out.print("\n\tGiven string : " + string);
		StringBuilder stringBuilder = new StringBuilder(string);
		if(stringBuilder.reverse().toString().equals(string)){
			System.out.println(" => is a pelindrome");
		} else {
			System.out.println(" => is NOT a pelindrome");
		}
		System.out.println("\tReverse String : " + stringBuilder);
	}

}
